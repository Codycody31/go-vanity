variables:
  - &golang_image "docker.io/golang:1.22.2"
  - &buildx_plugin "docker.io/woodpeckerci/plugin-docker-buildx:3.2.1"
  - &platforms_release "linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/386,linux/amd64,linux/ppc64le,linux/riscv64,linux/s390x,freebsd/arm64,freebsd/amd64,openbsd/arm64,openbsd/amd64"
  - &platforms_preview "linux/amd64"
  - &platforms_alpine "linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64,linux/ppc64le"
  - &build_args "CI_COMMIT_SHA=${CI_COMMIT_SHA},CI_COMMIT_BRANCH=${CI_COMMIT_BRANCH},CI_COMMIT_TAG=${CI_COMMIT_TAG}"

  # vars used on push / tag events only
  - publish_logins: &publish_logins 
      # Default DockerHub login
      - registry: https://index.docker.io/v1/
        username: insidiousfiddler
        password:
          from_secret: docker_password
  - &publish_repos "insidiousfiddler/vanity"
  - path: &when_path
      # go source code
      - "**/*.go"
      - "go.*"
      # Dockerfile changes
      - "docker/**"
      # pipeline config changes
      - ".woodpecker/docker.yaml"

when:
  - event: [pull_request, tag]
  - event: push
    branch:
      - renovate/*
  - event: push
    branch: ${CI_REPO_DEFAULT_BRANCH}
    path: *when_path

steps:
  vendor:
    image: *golang_image
    pull: true
    commands:
      - go mod vendor
    when:
      - event: pull_request
        evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      - event: pull_request
        path: *when_path
      - branch:
          - ${CI_REPO_DEFAULT_BRANCH}
          - renovate/*
        event: [push, tag]
        path: *when_path

  publish-preview:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: insidiousfiddler/vanity
      dockerfile: docker/Dockerfile.multiarch
      platforms: *platforms_preview
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
      logins: *publish_logins
    when:
      evaluate: 'CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images"'
      event: pull_request

  build-dryrun:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      dry_run: true
      repo: insidiousfiddler/vanity
      dockerfile: docker/Dockerfile.multiarch
      platforms: *platforms_preview
      tag: pull_${CI_COMMIT_PULL_REQUEST}
      build_args: *build_args
    when:
      - evaluate: 'not (CI_COMMIT_PULL_REQUEST_LABELS contains "build_pr_images")'
        event: pull_request
        path: *when_path
      - event: push
        path: *when_path
        branch: renovate/*

  publish-next:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos
      dockerfile: docker/Dockerfile.multiarch
      platforms: *platforms_release
      tag: [next, "next-${CI_COMMIT_SHA:0:10}"]
      logins: *publish_logins
      build_args: *build_args
    when: &when-publish-next
      branch: ${CI_REPO_DEFAULT_BRANCH}
      event: push
      path: *when_path

  publish-next-alpine:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos
      dockerfile: docker/Dockerfile.alpine.multiarch
      platforms: *platforms_alpine
      tag: [next-alpine, "next-${CI_COMMIT_SHA:0:10}-alpine"]
      logins: *publish_logins
      build_args: *build_args
    when: *when-publish-next

  release:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos
      dockerfile: docker/Dockerfile.multiarch
      platforms: *platforms_release
      # remove 'latest' on older version branches to avoid accidental downgrade
      tag: [latest, "${CI_COMMIT_TAG}"]
      logins: *publish_logins
      build_args: *build_args
    when: &when-release
      event: tag

  release-alpine:
    depends_on:
      - vendor
    image: *buildx_plugin
    settings:
      repo: *publish_repos
      dockerfile: docker/Dockerfile.alpine.multiarch
      platforms: *platforms_alpine
      # remove 'latest-alpine' on older version branches to avoid accidental downgrade
      tag: [latest-alpine, "${CI_COMMIT_TAG}-alpine"]
      logins: *publish_logins
      build_args: *build_args
    when: *when-release
